{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 156, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Toby/TodoList/TodoList-App/src/shareCode/common.ts"],"sourcesContent":["import { env } from \"process\";\r\n\r\nexport interface IBDSettings {\r\n  host: string;\r\n  port: number;\r\n  user: string;\r\n  password: string;\r\n  database: string;\r\n}\r\n\r\nexport const GetDBSettings = (): IBDSettings => {\r\n  const env = process.env.NODE_ENV;\r\n\r\n  if (env === \"development\")\r\n    return {\r\n      host: \"localhost\",\r\n      port: 3306,\r\n      user: \"root\",\r\n      password: \"Admin@123\",\r\n      database: \"todolist\",\r\n    };\r\n};\r\n"],"names":[],"mappings":";;;AAUO,MAAM,gBAAgB;IAC3B,MAAM;IAEN,wCACE,OAAO;QACL,MAAM;QACN,MAAM;QACN,MAAM;QACN,UAAU;QACV,UAAU;IACZ;AACJ","debugId":null}},
    {"offset": {"line": 175, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Toby/TodoList/TodoList-App/src/app/api/todolist/%5Bid%5D/route.ts"],"sourcesContent":["import mysql from \"mysql2/promise\";\r\n\r\nimport { NextResponse } from \"next/server\";\r\n\r\nimport { GetDBSettings } from \"shareCode/common\";\r\n\r\n// Delete todo by id\r\nexport async function DELETE(request: Request) {\r\n  const url = new URL(request.url);\r\n  const id = url.pathname.split(\"/\").pop();\r\n  console.log(id);\r\n\r\n  try {\r\n    const connectionsParams = GetDBSettings();\r\n    const connection = await mysql.createConnection(connectionsParams);\r\n\r\n    const query = `DELETE FROM todolist.todo WHERE id=?`;\r\n    const values = [id];\r\n\r\n    const result = await connection.execute(query, values);\r\n\r\n    await connection.end();\r\n\r\n    return NextResponse.json(result);\r\n  } catch (err) {\r\n    console.log(\"ERROR: \", (err as Error).message);\r\n    const response = {\r\n      error: (err as Error).message,\r\n      returnStatus: 500,\r\n    };\r\n    return NextResponse.json({ response });\r\n  }\r\n}\r\n\r\n// Update Todo status or content by id\r\nexport async function PATCH(request: Request) {\r\n  const url = new URL(request.url);\r\n  const id = url.pathname.split(\"/\").pop();\r\n\r\n  const body = await request.json();\r\n  const { todo, status } = body;\r\n  console.log(todo, status);\r\n\r\n  try {\r\n    const connectionsParams = GetDBSettings();\r\n    const connection = await mysql.createConnection(connectionsParams);\r\n\r\n    const update: string[] = [];\r\n\r\n    let query = `UPDATE todolist.todo `;\r\n    const values: any[] = [];\r\n\r\n    if (typeof status !== \"undefined\") {\r\n      update.push(\"status = ?\"), values.push(status ? 1 : 0);\r\n    }\r\n    if (typeof todo !== \"undefined\") {\r\n      update.push(\"todo = ?\");\r\n      values.push(todo);\r\n    }\r\n\r\n    query += `SET ${update.join(\", \")} WHERE id=?`;\r\n    values.push(id);\r\n    const [result] = await connection.execute(query, values);\r\n    console.log(result);\r\n    await connection.end();\r\n    return NextResponse.json(result);\r\n  } catch (err) {\r\n    console.log(\"ERROR: \", (err as Error).message);\r\n    const response = {\r\n      error: (err as Error).message,\r\n      returnStatus: 500,\r\n    };\r\n    return NextResponse.json({ response });\r\n  }\r\n}\r\n"],"names":[],"mappings":";;;;AAAA;AAEA;AAEA;;;;AAGO,eAAe,OAAO,OAAgB;IAC3C,MAAM,MAAM,IAAI,IAAI,QAAQ,GAAG;IAC/B,MAAM,KAAK,IAAI,QAAQ,CAAC,KAAK,CAAC,KAAK,GAAG;IACtC,QAAQ,GAAG,CAAC;IAEZ,IAAI;QACF,MAAM,oBAAoB,CAAA,GAAA,4HAAA,CAAA,gBAAa,AAAD;QACtC,MAAM,aAAa,MAAM,mIAAA,CAAA,UAAK,CAAC,gBAAgB,CAAC;QAEhD,MAAM,QAAQ,CAAC,oCAAoC,CAAC;QACpD,MAAM,SAAS;YAAC;SAAG;QAEnB,MAAM,SAAS,MAAM,WAAW,OAAO,CAAC,OAAO;QAE/C,MAAM,WAAW,GAAG;QAEpB,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;IAC3B,EAAE,OAAO,KAAK;QACZ,QAAQ,GAAG,CAAC,WAAW,AAAC,IAAc,OAAO;QAC7C,MAAM,WAAW;YACf,OAAO,AAAC,IAAc,OAAO;YAC7B,cAAc;QAChB;QACA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE;QAAS;IACtC;AACF;AAGO,eAAe,MAAM,OAAgB;IAC1C,MAAM,MAAM,IAAI,IAAI,QAAQ,GAAG;IAC/B,MAAM,KAAK,IAAI,QAAQ,CAAC,KAAK,CAAC,KAAK,GAAG;IAEtC,MAAM,OAAO,MAAM,QAAQ,IAAI;IAC/B,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,GAAG;IACzB,QAAQ,GAAG,CAAC,MAAM;IAElB,IAAI;QACF,MAAM,oBAAoB,CAAA,GAAA,4HAAA,CAAA,gBAAa,AAAD;QACtC,MAAM,aAAa,MAAM,mIAAA,CAAA,UAAK,CAAC,gBAAgB,CAAC;QAEhD,MAAM,SAAmB,EAAE;QAE3B,IAAI,QAAQ,CAAC,qBAAqB,CAAC;QACnC,MAAM,SAAgB,EAAE;QAExB,IAAI,OAAO,WAAW,aAAa;YACjC,OAAO,IAAI,CAAC,eAAe,OAAO,IAAI,CAAC,SAAS,IAAI;QACtD;QACA,IAAI,OAAO,SAAS,aAAa;YAC/B,OAAO,IAAI,CAAC;YACZ,OAAO,IAAI,CAAC;QACd;QAEA,SAAS,CAAC,IAAI,EAAE,OAAO,IAAI,CAAC,MAAM,WAAW,CAAC;QAC9C,OAAO,IAAI,CAAC;QACZ,MAAM,CAAC,OAAO,GAAG,MAAM,WAAW,OAAO,CAAC,OAAO;QACjD,QAAQ,GAAG,CAAC;QACZ,MAAM,WAAW,GAAG;QACpB,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;IAC3B,EAAE,OAAO,KAAK;QACZ,QAAQ,GAAG,CAAC,WAAW,AAAC,IAAc,OAAO;QAC7C,MAAM,WAAW;YACf,OAAO,AAAC,IAAc,OAAO;YAC7B,cAAc;QAChB;QACA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE;QAAS;IACtC;AACF","debugId":null}}]
}