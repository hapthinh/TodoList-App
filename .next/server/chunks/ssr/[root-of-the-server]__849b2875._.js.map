{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Toby/TodoList/TodoList-App/src/app/provider/provider.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/provider/provider.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/provider/provider.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAiS,GAC9T,+DACA","debugId":null}},
    {"offset": {"line": 21, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Toby/TodoList/TodoList-App/src/app/provider/provider.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/provider/provider.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/provider/provider.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA6Q,GAC1S,2CACA","debugId":null}},
    {"offset": {"line": 35, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 117, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Toby/TodoList/TodoList-App/src/auth.ts"],"sourcesContent":["import NextAuth from \"next-auth\";\r\nimport Credentials from \"next-auth/providers/credentials\";\r\nimport type { Provider } from \"next-auth/providers/index\";\r\n\r\nconst providers: Provider[] = [\r\n  Credentials({\r\n    credentials: {\r\n      email: { label: \"Email Address\", type: \"email\" },\r\n      password: { label: \"Password\", type: \"password\" },\r\n    },\r\n    authorize(c) {\r\n      if (c.password !== \"password\") {\r\n        return null;\r\n      }\r\n    },\r\n  }),\r\n];\r\n\r\nexport const providerMap = providers.map((provider) => {\r\n  return { id: provider.id, name: provider.name };\r\n});\r\n\r\nexport const handlers = NextAuth({\r\n  providers,\r\n  secret: process.env.AUTH_SECRET,\r\n  pages: {\r\n    signIn: \"auth/signin\",\r\n  },\r\n  callbacks: {\r\n    async signIn({ user, account, profile, email, credentials }) {\r\n      // Example: Only allow sign in if password is 'password'\r\n      if (credentials?.password?.toString() !== \"password\") {\r\n        return false;\r\n      }\r\n      return true;\r\n    },\r\n    async session({ session, token, user }) {\r\n      // Optionally customize session object here\r\n      return session;\r\n    },\r\n  },\r\n});\r\n"],"names":[],"mappings":";;;;AAAA;AACA;;;AAGA,MAAM,YAAwB;IAC5B,CAAA,GAAA,wJAAA,CAAA,UAAW,AAAD,EAAE;QACV,aAAa;YACX,OAAO;gBAAE,OAAO;gBAAiB,MAAM;YAAQ;YAC/C,UAAU;gBAAE,OAAO;gBAAY,MAAM;YAAW;QAClD;QACA,WAAU,CAAC;YACT,IAAI,EAAE,QAAQ,KAAK,YAAY;gBAC7B,OAAO;YACT;QACF;IACF;CACD;AAEM,MAAM,cAAc,UAAU,GAAG,CAAC,CAAC;IACxC,OAAO;QAAE,IAAI,SAAS,EAAE;QAAE,MAAM,SAAS,IAAI;IAAC;AAChD;AAEO,MAAM,WAAW,CAAA,GAAA,qIAAA,CAAA,UAAQ,AAAD,EAAE;IAC/B;IACA,QAAQ,QAAQ,GAAG,CAAC,WAAW;IAC/B,OAAO;QACL,QAAQ;IACV;IACA,WAAW;QACT,MAAM,QAAO,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE,WAAW,EAAE;YACzD,wDAAwD;YACxD,IAAI,aAAa,UAAU,eAAe,YAAY;gBACpD,OAAO;YACT;YACA,OAAO;QACT;QACA,MAAM,SAAQ,EAAE,OAAO,EAAE,KAAK,EAAE,IAAI,EAAE;YACpC,2CAA2C;YAC3C,OAAO;QACT;IACF;AACF","debugId":null}},
    {"offset": {"line": 176, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Toby/TodoList/TodoList-App/src/app/layout.tsx"],"sourcesContent":["import React from \"react\";\r\n\r\nimport Providers from \"./provider/provider\";\r\nimport \"./globals.css\";\r\nimport { auth } from \"auth\";\r\n\r\nexport default async function RootLayout({\r\n  children,\r\n}: {\r\n  children: React.ReactNode;\r\n}) {\r\n  const session = await auth()\r\n  return (\r\n    <html>\r\n      <body>\r\n        <Providers session={session}>\r\n        {children}\r\n        </Providers>\r\n      </body>\r\n    </html>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AAEA;AAEA;;;;;AAEe,eAAe,WAAW,EACvC,QAAQ,EAGT;IACC,MAAM,UAAU,MAAM,CAAA,GAAA,2GAAA,CAAA,OAAI,AAAD;IACzB,qBACE,8OAAC;kBACC,cAAA,8OAAC;sBACC,cAAA,8OAAC,mIAAA,CAAA,UAAS;gBAAC,SAAS;0BACnB;;;;;;;;;;;;;;;;AAKT","debugId":null}}]
}