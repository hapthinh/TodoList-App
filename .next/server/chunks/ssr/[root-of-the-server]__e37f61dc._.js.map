{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///E:/frontendApp/frontendApp/src/app/actions/signInActions.ts"],"sourcesContent":["\"use server\";\r\n\r\nimport { AuthProvider } from \"@toolpad/core\";\r\nimport { signIn } from \"next-auth/react\";\r\n\r\nexport default async function signInAction(\r\n  provider: AuthProvider,\r\n  formData: FormData,\r\n  callbackUrl: string\r\n) {\r\n  try {\r\n    return await signIn(provider.id, {\r\n      ...(formData && {\r\n        email: formData.get(\"email\"),\r\n        password: formData.get(\"password\"),\r\n      }),\r\n      callbackUrl: \"/todolist\",\r\n    });\r\n  } catch (e) {\r\n    if (e instanceof Error && e.message === \"NEXT_REDIRECT\") {\r\n      throw e;\r\n    }\r\n  }\r\n}\r\n"],"names":[],"mappings":";;;;;AAGA;;;;;AAEe,eAAe,aAC5B,QAAsB,EACtB,QAAkB,EAClB,WAAmB;IAEnB,IAAI;QACF,OAAO,MAAM,CAAA,GAAA,8IAAA,CAAA,SAAM,AAAD,EAAE,SAAS,EAAE,EAAE;YAC/B,GAAI,YAAY;gBACd,OAAO,SAAS,GAAG,CAAC;gBACpB,UAAU,SAAS,GAAG,CAAC;YACzB,CAAC;YACD,aAAa;QACf;IACF,EAAE,OAAO,GAAG;QACV,IAAI,aAAa,SAAS,EAAE,OAAO,KAAK,iBAAiB;YACvD,MAAM;QACR;IACF;AACF;;;IAlB8B;;AAAA,+OAAA","debugId":null}},
    {"offset": {"line": 43, "column": 0}, "map": {"version":3,"sources":["file:///E:/frontendApp/frontendApp/.next-internal/server/app/page/actions.js%20%28server%20actions%20loader%29"],"sourcesContent":["export {default as '70cef2390fee9d6cb2ece7b70a15e1d9dfbf33d011'} from 'ACTIONS_MODULE0'\n"],"names":[],"mappings":";AAAA","debugId":null}},
    {"offset": {"line": 167, "column": 0}, "map": {"version":3,"sources":["file:///E:/frontendApp/frontendApp/src/auth.ts"],"sourcesContent":["import NextAuth from \"next-auth\";\r\nimport Credentials from \"next-auth/providers/credentials\";\r\nimport type { Provider } from \"next-auth/providers/index\";\r\n\r\nconst providers: Provider[] = [\r\n  Credentials({\r\n    credentials: {\r\n      email: { label: \"Email Address\", type: \"email\" },\r\n      password: { label: \"Password\", type: \"password\" },\r\n    },\r\n    authorize(c) {\r\n      if (c.password !== \"password\") {\r\n        return null;\r\n      }\r\n    },\r\n  }),\r\n];\r\n\r\nexport const providerMap = providers.map((provider) => {\r\n  return { id: provider.id, name: provider.name };\r\n});\r\n\r\nexport const { handlers, signIn, signOut } = NextAuth({\r\n  providers,\r\n  secret: process.env.AUTH_SECRET,\r\n  pages: {\r\n    signIn: \"auth/signin\",\r\n  },\r\n  callbacks: {\r\n    async signIn({ user, account, profile, email, credentials }) {\r\n      if (credentials?.password?.toString() !== \"password\") {\r\n        return false;\r\n      }\r\n      return true;\r\n    },\r\n    async session({ session }) {\r\n      return session;\r\n    },\r\n  },\r\n});\r\n"],"names":[],"mappings":";;;;;;AAAA;AACA;;;AAGA,MAAM,YAAwB;IAC5B,CAAA,GAAA,wJAAA,CAAA,UAAW,AAAD,EAAE;QACV,aAAa;YACX,OAAO;gBAAE,OAAO;gBAAiB,MAAM;YAAQ;YAC/C,UAAU;gBAAE,OAAO;gBAAY,MAAM;YAAW;QAClD;QACA,WAAU,CAAC;YACT,IAAI,EAAE,QAAQ,KAAK,YAAY;gBAC7B,OAAO;YACT;QACF;IACF;CACD;AAEM,MAAM,cAAc,UAAU,GAAG,CAAC,CAAC;IACxC,OAAO;QAAE,IAAI,SAAS,EAAE;QAAE,MAAM,SAAS,IAAI;IAAC;AAChD;AAEO,MAAM,EAAE,QAAQ,EAAE,MAAM,EAAE,OAAO,EAAE,GAAG,CAAA,GAAA,qIAAA,CAAA,UAAQ,AAAD,EAAE;IACpD;IACA,QAAQ,QAAQ,GAAG,CAAC,WAAW;IAC/B,OAAO;QACL,QAAQ;IACV;IACA,WAAW;QACT,MAAM,QAAO,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE,WAAW,EAAE;YACzD,IAAI,aAAa,UAAU,eAAe,YAAY;gBACpD,OAAO;YACT;YACA,OAAO;QACT;QACA,MAAM,SAAQ,EAAE,OAAO,EAAE;YACvB,OAAO;QACT;IACF;AACF","debugId":null}},
    {"offset": {"line": 226, "column": 0}, "map": {"version":3,"sources":["file:///E:/frontendApp/frontendApp/src/app/auth/signin/page.tsx"],"sourcesContent":["import { SignInPage } from '@toolpad/core';\r\nimport signInAction from 'app/actions/signInActions';\r\nimport { providerMap } from 'auth';\r\n\r\nexport default function SignIn() {\r\n    return (\r\n        <SignInPage\r\n            providers={providerMap}\r\n            signIn={signInAction}\r\n        >\r\n        </SignInPage>\r\n    )\r\n}\r\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;;;;;AAEe,SAAS;IACpB,qBACI,8OAAC,kKAAA,CAAA,aAAU;QACP,WAAW,2GAAA,CAAA,cAAW;QACtB,QAAQ,sIAAA,CAAA,UAAY;;;;;;AAIhC","debugId":null}},
    {"offset": {"line": 253, "column": 0}, "map": {"version":3,"sources":["file:///E:/frontendApp/frontendApp/src/app/components/TodoPage.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/components/TodoPage.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/components/TodoPage.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAmS,GAChU,iEACA","debugId":null}},
    {"offset": {"line": 267, "column": 0}, "map": {"version":3,"sources":["file:///E:/frontendApp/frontendApp/src/app/components/TodoPage.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/components/TodoPage.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/components/TodoPage.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA+Q,GAC5S,6CACA","debugId":null}},
    {"offset": {"line": 281, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 291, "column": 0}, "map": {"version":3,"sources":["file:///E:/frontendApp/frontendApp/src/app/page.tsx"],"sourcesContent":["import React from \"react\";\r\nimport SignIn from \"./auth/signin/page\";\r\nimport TodoPage from \"./components/TodoPage\";\r\nimport { useSession } from \"next-auth/react\";\r\n\r\nexport default function App() {\r\n  const { data: session, status } = useSession();\r\n\r\n  if (!session) return <SignIn />;\r\n\r\n  return (\r\n    <>\r\n      <TodoPage />\r\n    </>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AACA;AACA;AACA;;;;;AAEe,SAAS;IACtB,MAAM,EAAE,MAAM,OAAO,EAAE,MAAM,EAAE,GAAG,CAAA,GAAA,8IAAA,CAAA,aAAU,AAAD;IAE3C,IAAI,CAAC,SAAS,qBAAO,8OAAC,qIAAA,CAAA,UAAM;;;;;IAE5B,qBACE;kBACE,cAAA,8OAAC,qIAAA,CAAA,UAAQ;;;;;;AAGf","debugId":null}}]
}