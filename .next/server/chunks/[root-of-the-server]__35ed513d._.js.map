{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 156, "column": 0}, "map": {"version":3,"sources":["file:///E:/frontendApp/frontendApp/src/shareCode/common.ts"],"sourcesContent":["import { env } from \"process\";\r\n\r\nexport interface IBDSettings {\r\n  host: string;\r\n  port: number;\r\n  user: string;\r\n  password: string;\r\n  database: string;\r\n}\r\n\r\nexport const GetDBSettings = (): IBDSettings => {\r\n  const env = process.env.NODE_ENV;\r\n\r\n  if (env === \"development\")\r\n    return {\r\n      host: \"localhost\",\r\n      port: 3306,\r\n      user: \"root\",\r\n      password: \"Admin@123\",\r\n      database: \"todolist\",\r\n    };\r\n};\r\n"],"names":[],"mappings":";;;AAUO,MAAM,gBAAgB;IAC3B,MAAM;IAEN,wCACE,OAAO;QACL,MAAM;QACN,MAAM;QACN,MAAM;QACN,UAAU;QACV,UAAU;IACZ;AACJ","debugId":null}},
    {"offset": {"line": 175, "column": 0}, "map": {"version":3,"sources":["file:///E:/frontendApp/frontendApp/src/app/api/mysql/todolist/route.ts"],"sourcesContent":["import { error } from \"console\";\r\nimport mysql from \"mysql2/promise\";\r\n\r\nimport { NextResponse } from \"next/server\";\r\n\r\nimport { GetDBSettings } from \"shareCode/common\";\r\n\r\nexport async function GET(request: Request) {\r\n  const { searchParams } = new URL(request.url);\r\n\r\n  const kw = searchParams.get(\"kw\") || \"\";\r\n  const status = searchParams.get(\"status\") || \"\";\r\n  const page = parseInt(searchParams.get(\"page\") || \"1\", 10);\r\n  const limit = parseInt(searchParams.get(\"limit\") || \"10\", 10);\r\n  const order = searchParams.get(\"order\") || \"\";\r\n  const sortField = searchParams.get(\"sortField\") || \"\";\r\n\r\n  try {\r\n    const connectionsParams = GetDBSettings();\r\n    const connection = await mysql.createConnection(connectionsParams);\r\n\r\n    let query = \"SELECT * FROM todolist.todo WHERE todo \";\r\n    const values: any[] = [];\r\n\r\n    if (kw) {\r\n      query += \"LIKE ?\";\r\n      values.push(`%${kw}%`);\r\n    }\r\n    if (status) {\r\n      query += \"WHERE status=?\";\r\n      values.push(status);\r\n    }\r\n\r\n    query += ` ORDER BY ${sortField} ${order}`;\r\n\r\n    const [result] = await connection.execute(query, values);\r\n\r\n    await connection.end();\r\n\r\n    const total = [result];\r\n    const len = total.length;\r\n    const start = (page - 1) * limit;\r\n    const end = start + limit;\r\n    const pageTodos = total.slice(start, end);\r\n\r\n    return NextResponse.json({\r\n      todos: pageTodos,\r\n      len,\r\n      page,\r\n      limit,\r\n    });\r\n  } catch (error) {\r\n    console.log(\"ERROR: \", (error as Error).message);\r\n    const response = {\r\n      error: (error as Error).message,\r\n\r\n      returnedStatus: 200,\r\n    };\r\n\r\n    return NextResponse.json(response, { status: 200 });\r\n  }\r\n}\r\n\r\nexport async function POST(request: Request) {\r\n  const body = await request.json();\r\n  const id = body.id;\r\n  const todo = body.todo;\r\n  try {\r\n    const connectionsParams = GetDBSettings();\r\n    const connection = await mysql.createConnection(connectionsParams);\r\n\r\n    let query = \"INSERT INTO todolist.todo\";\r\n    const values: any[] = [];\r\n\r\n    query += `VALUES (${id}, ${todo}, 1, \"\")`;\r\n\r\n    const [result] = await connection.execute(query, values);\r\n\r\n    await connection.end();\r\n\r\n    return NextResponse.json({ result });\r\n  } catch (err) {\r\n    console.log(\"ERROR: \", (err as Error).message);\r\n    const response = {\r\n      error: (err as Error).message,\r\n      returnStatus: 200,\r\n    };\r\n  }\r\n}\r\n\r\nexport async function DELETE(request: Request) {\r\n  const body = await request.json();\r\n  const id = body.id;\r\n\r\n  try {\r\n    const connectionsParams = GetDBSettings();\r\n    const connection = await mysql.createConnection(connectionsParams);\r\n\r\n    let query = \"DELETE FROM todolist.todo\";\r\n    const values: any[] = [];\r\n\r\n    query += ` WHERE id=${id}`;\r\n\r\n    const [result] = await connection.execute(query, values);\r\n\r\n    await connection.end();\r\n\r\n    return NextResponse.json(result);\r\n  } catch (err) {\r\n    console.log(\"ERROR: \", (err as Error).message);\r\n    const response = {\r\n      error: (err as Error).message,\r\n      returnSatus: 200,\r\n    };\r\n  }\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}}]
}