{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 70, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Toby/TodoList/TodoList-App/src/app/db/index.ts"],"sourcesContent":["import { drizzle } from \"drizzle-orm/node-postgres\";\r\nimport { Pool } from \"pg\";\r\n\r\nconst pool = new Pool({\r\n  connectionString:\r\n    process.env.DATABASE_URL ||\r\n    \"postgres://postgres:root@localhost:5432/todolist_db\",\r\n});\r\n\r\nexport const db = drizzle(pool);\r\n"],"names":[],"mappings":";;;AAAA;AACA;;;;;;;;AAEA,MAAM,OAAO,IAAI,oGAAA,CAAA,OAAI,CAAC;IACpB,kBACE,QAAQ,GAAG,CAAC,YAAY,IACxB;AACJ;AAEO,MAAM,KAAK,CAAA,GAAA,8JAAA,CAAA,UAAO,AAAD,EAAE","debugId":null}},
    {"offset": {"line": 93, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Toby/TodoList/TodoList-App/src/app/db/schema.ts"],"sourcesContent":["import { timeStamp } from \"console\";\r\nimport { relations } from \"drizzle-orm\";\r\nimport {\r\n  serial,\r\n  text,\r\n  boolean,\r\n  pgTable,\r\n  timestamp,\r\n  integer,\r\n} from \"drizzle-orm/pg-core\";\r\n\r\n// Table Todo\r\nexport const todos = pgTable(\"todo\", {\r\n  id: serial(\"id\").primaryKey(),\r\n  todo: text(\"todo\"),\r\n  completed: boolean(\"completed\").default(false),\r\n  createdDate: text(\"createdDate\"),\r\n  userId: integer(\"user_id\")\r\n    .notNull()\r\n    .references(() => users.id),\r\n});\r\n\r\n// Table user\r\nexport const users = pgTable(\"user\", {\r\n  id: serial(\"id\").primaryKey(),\r\n  name: text(\"name\").notNull(),\r\n  email: text(\"email\"),\r\n  createdAt: timestamp(\"created_at\").notNull().defaultNow(),\r\n  updatedAt: timestamp(\"updated_at\").notNull().defaultNow(),\r\n});\r\n\r\n// todo 1-1 or n-1 user\r\nexport const todoRelations = relations(todos, ({ one }) => ({\r\n  users: one(users, { fields: [todos.userId], references: [users.id] }),\r\n}));\r\n\r\n// user 1-n todo\r\nexport const userRelations = relations(users, ({ many }) => ({\r\n  todos: many(todos),\r\n}));\r\n"],"names":[],"mappings":";;;;;;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAUO,MAAM,QAAQ,CAAA,GAAA,uJAAA,CAAA,UAAO,AAAD,EAAE,QAAQ;IACnC,IAAI,CAAA,GAAA,mKAAA,CAAA,SAAM,AAAD,EAAE,MAAM,UAAU;IAC3B,MAAM,CAAA,GAAA,iKAAA,CAAA,OAAI,AAAD,EAAE;IACX,WAAW,CAAA,GAAA,oKAAA,CAAA,UAAO,AAAD,EAAE,aAAa,OAAO,CAAC;IACxC,aAAa,CAAA,GAAA,iKAAA,CAAA,OAAI,AAAD,EAAE;IAClB,QAAQ,CAAA,GAAA,oKAAA,CAAA,UAAO,AAAD,EAAE,WACb,OAAO,GACP,UAAU,CAAC,IAAM,MAAM,EAAE;AAC9B;AAGO,MAAM,QAAQ,CAAA,GAAA,uJAAA,CAAA,UAAO,AAAD,EAAE,QAAQ;IACnC,IAAI,CAAA,GAAA,mKAAA,CAAA,SAAM,AAAD,EAAE,MAAM,UAAU;IAC3B,MAAM,CAAA,GAAA,iKAAA,CAAA,OAAI,AAAD,EAAE,QAAQ,OAAO;IAC1B,OAAO,CAAA,GAAA,iKAAA,CAAA,OAAI,AAAD,EAAE;IACZ,WAAW,CAAA,GAAA,sKAAA,CAAA,YAAS,AAAD,EAAE,cAAc,OAAO,GAAG,UAAU;IACvD,WAAW,CAAA,GAAA,sKAAA,CAAA,YAAS,AAAD,EAAE,cAAc,OAAO,GAAG,UAAU;AACzD;AAGO,MAAM,gBAAgB,CAAA,GAAA,6IAAA,CAAA,YAAS,AAAD,EAAE,OAAO,CAAC,EAAE,GAAG,EAAE,GAAK,CAAC;QAC1D,OAAO,IAAI,OAAO;YAAE,QAAQ;gBAAC,MAAM,MAAM;aAAC;YAAE,YAAY;gBAAC,MAAM,EAAE;aAAC;QAAC;IACrE,CAAC;AAGM,MAAM,gBAAgB,CAAA,GAAA,6IAAA,CAAA,YAAS,AAAD,EAAE,OAAO,CAAC,EAAE,IAAI,EAAE,GAAK,CAAC;QAC3D,OAAO,KAAK;IACd,CAAC","debugId":null}},
    {"offset": {"line": 141, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Toby/TodoList/TodoList-App/src/app/services/todoServices.ts"],"sourcesContent":["import { db } from \"app/db\";\r\nimport { todos } from \"app/db/schema\";\r\nimport { eq } from \"drizzle-orm\";\r\n\r\nexport async function deleteTodoById(id: number) {\r\n  return db.delete(todos).where(eq(todos.id, id)).returning();\r\n}\r\n\r\nexport async function getTodoById(id: number) {\r\n  return db.select().from(todos).where(eq(todos.id, id));\r\n}\r\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;;;;;;;;AAEO,eAAe,eAAe,EAAU;IAC7C,OAAO,2HAAA,CAAA,KAAE,CAAC,MAAM,CAAC,4HAAA,CAAA,QAAK,EAAE,KAAK,CAAC,CAAA,GAAA,oKAAA,CAAA,KAAE,AAAD,EAAE,4HAAA,CAAA,QAAK,CAAC,EAAE,EAAE,KAAK,SAAS;AAC3D;AAEO,eAAe,YAAY,EAAU;IAC1C,OAAO,2HAAA,CAAA,KAAE,CAAC,MAAM,GAAG,IAAI,CAAC,4HAAA,CAAA,QAAK,EAAE,KAAK,CAAC,CAAA,GAAA,oKAAA,CAAA,KAAE,AAAD,EAAE,4HAAA,CAAA,QAAK,CAAC,EAAE,EAAE;AACpD","debugId":null}},
    {"offset": {"line": 168, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Toby/TodoList/TodoList-App/src/app/api/todolist/%5Bid%5D/route.ts"],"sourcesContent":["import { NextResponse } from \"next/server\";\r\nimport { eq } from \"drizzle-orm\";\r\n\r\nimport { db } from \"app/db\";\r\nimport { todos } from \"app/db/schema\";\r\nimport { deleteTodoById } from \"app/services/todoServices\";\r\n\r\n// Delete todo by id\r\nexport async function DELETE(request: Request) {\r\n  const url = new URL(request.url);\r\n  const id = Number(url.pathname.split(\"/\").pop());\r\n  console.log(id);\r\n\r\n  const result = await deleteTodoById(id);\r\n\r\n  return NextResponse.json(result[0]);\r\n}\r\n\r\n// Update Todo status or content by id\r\nexport async function PATCH(request: Request) {\r\n  const url = new URL(request.url);\r\n  const id = Number(url.pathname.split(\"/\").pop());\r\n  const body = await request.json();\r\n  const updateData: any = {};\r\n\r\n  if (typeof body.todo !== \"undefined\") updateData.todo = body.todo;\r\n  if (typeof body.completed !== \"undefined\")\r\n    updateData.completed = body.completed;\r\n\r\n  const result = await db\r\n    .update(todos)\r\n    .set(updateData)\r\n    .where(eq(todos.id, id))\r\n    .returning();\r\n\r\n  return NextResponse.json(result[0]);\r\n}\r\n"],"names":[],"mappings":";;;;AAAA;AACA;AAEA;AACA;AACA;;;;;;;;;;;AAGO,eAAe,OAAO,OAAgB;IAC3C,MAAM,MAAM,IAAI,IAAI,QAAQ,GAAG;IAC/B,MAAM,KAAK,OAAO,IAAI,QAAQ,CAAC,KAAK,CAAC,KAAK,GAAG;IAC7C,QAAQ,GAAG,CAAC;IAEZ,MAAM,SAAS,MAAM,CAAA,GAAA,wIAAA,CAAA,iBAAc,AAAD,EAAE;IAEpC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE;AACpC;AAGO,eAAe,MAAM,OAAgB;IAC1C,MAAM,MAAM,IAAI,IAAI,QAAQ,GAAG;IAC/B,MAAM,KAAK,OAAO,IAAI,QAAQ,CAAC,KAAK,CAAC,KAAK,GAAG;IAC7C,MAAM,OAAO,MAAM,QAAQ,IAAI;IAC/B,MAAM,aAAkB,CAAC;IAEzB,IAAI,OAAO,KAAK,IAAI,KAAK,aAAa,WAAW,IAAI,GAAG,KAAK,IAAI;IACjE,IAAI,OAAO,KAAK,SAAS,KAAK,aAC5B,WAAW,SAAS,GAAG,KAAK,SAAS;IAEvC,MAAM,SAAS,MAAM,2HAAA,CAAA,KAAE,CACpB,MAAM,CAAC,4HAAA,CAAA,QAAK,EACZ,GAAG,CAAC,YACJ,KAAK,CAAC,CAAA,GAAA,oKAAA,CAAA,KAAE,AAAD,EAAE,4HAAA,CAAA,QAAK,CAAC,EAAE,EAAE,KACnB,SAAS;IAEZ,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE;AACpC","debugId":null}}]
}