{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/src/middleware.ts"],"sourcesContent":["import { NextResponse } from \"next/server\";\r\nimport { NextRequest } from \"next/server\";\r\n\r\nconst allowedOrigins = [\"https://localhost:3000\"];\r\n\r\nconst corsOptions = {\r\n  \"Access-Control-Allow-Methods\": \"GET,POST,PUT,PATCH,DELETE\",\r\n  \"Access-Control-Allow-Headers\": \"Content-type\",\r\n};\r\n\r\nexport function middleware(request: NextRequest) {\r\n  const requestHeader = new Headers(request.headers);\r\n  requestHeader.set(\"origin\", \"https://localhost:3000\");\r\n  const origin = requestHeader.get(\"origin\") ?? \"\";\r\n  const isAllowedOrigin = allowedOrigins.includes(origin);\r\n\r\n  const response = NextResponse.next();\r\n\r\n  if (isAllowedOrigin) {\r\n    response.headers.set(\"Access-Control-Allow-Origin\", origin);\r\n  }\r\n\r\n  Object.entries(corsOptions).forEach(([key, value]) => {\r\n    response.headers.set(key, value);\r\n  });\r\n\r\n  return response;\r\n}\r\n\r\nexport const config = {\r\n  matcher: \"/api/:path\",\r\n};\r\n"],"names":[],"mappings":";;;;AAAA;AAAA;;AAGA,MAAM,iBAAiB;IAAC;CAAyB;AAEjD,MAAM,cAAc;IAClB,gCAAgC;IAChC,gCAAgC;AAClC;AAEO,SAAS,WAAW,OAAoB;IAC7C,MAAM,gBAAgB,IAAI,QAAQ,QAAQ,OAAO;IACjD,cAAc,GAAG,CAAC,UAAU;IAC5B,MAAM,SAAS,cAAc,GAAG,CAAC,aAAa;IAC9C,MAAM,kBAAkB,eAAe,QAAQ,CAAC;IAEhD,MAAM,WAAW,6LAAA,CAAA,eAAY,CAAC,IAAI;IAElC,IAAI,iBAAiB;QACnB,SAAS,OAAO,CAAC,GAAG,CAAC,+BAA+B;IACtD;IAEA,OAAO,OAAO,CAAC,aAAa,OAAO,CAAC,CAAC,CAAC,KAAK,MAAM;QAC/C,SAAS,OAAO,CAAC,GAAG,CAAC,KAAK;IAC5B;IAEA,OAAO;AACT;AAEO,MAAM,SAAS;IACpB,SAAS;AACX"}}]
}